#include <criterion/criterion.h>
#include <criterion/redirect.h>

#include "../sources/binaryConverter/binaryConverter.hpp"

Test(binaryConverter, string_to_binary_connexion)
{
    binaryConverter binaryConverter;
    std::string input = "100:";
    std::string expected_output = "00110001001100000011000000111010";
    std::string output = binaryConverter.string_to_binary(input);
    cr_assert(output == expected_output, "Expected %s but got %s", expected_output.c_str(), output.c_str());
}

Test(binaryConverter, binary_to_string_connexion)
{
    binaryConverter binaryConverter;
    std::string input = "00110001001100000011000000111010";
    std::string expected_output = "100:";
    std::string output = binaryConverter.binary_to_string(input);
    cr_assert(output == expected_output, "Expected %s but got %s", expected_output.c_str(), output.c_str());
}

Test(binaryConverter, string_to_binary_connexion2)
{
    binaryConverter binaryConverter;
    std::string input = "300:id=2;{sprite_name=”plane.jpeg”,pos=[x=”-92.92”,y=“686.16”]};{sprite_name=”mob.jpeg”,pos=[x=”23.19”,y=“68.22”]}";
    std::string expected_output
    std::string output = binaryConverter.string_to_binary(input);
    cr_assert(output == expected_output, "Expected %s but got %s", expected_output.c_str(), output.c_str());
}